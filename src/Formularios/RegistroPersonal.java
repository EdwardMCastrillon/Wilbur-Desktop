/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;

import Listas.ListaUsuario;
import java.awt.Image;
import java.awt.event.KeyEvent;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import java.util.Arrays;
import javax.swing.JFileChooser;
import javax.swing.JTextField;
import javax.swing.filechooser.FileNameExtensionFilter;
import porcicolawilbur.*;
import Utilidades.*;
import Identidades.*;
import java.awt.event.ItemEvent;
import java.util.Date;
import javax.swing.ButtonGroup;

public class RegistroPersonal extends javax.swing.JFrame {

    /**
     * Creates new form RegistroPersonal
     */
    private FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivo de Imagen", ".jpg");
    String rutaimagen, estado, obtenido;
    DatosPersonal buscarPersonal, persona;
    Validaciones Va = new Validaciones();
    ListaUsuario listaPersonal;
    DepartamentosMunicipios deparMuni;
    ImageIcon icoMensajeInfor, icoMensajePre, icoCalendario;
    int swModifi = 0, boton =0;
    Date fecha;
    int año, mes, dia;
    String nombreVentana;
    ButtonGroup grupoEstado, grupoObtenido;

    public RegistroPersonal() { 
    }

    public RegistroPersonal(ListaUsuario L) {
        initComponents();
        this.validarCampos();
        deparMuni = new DepartamentosMunicipios();
        listaPersonal = L;
        //JTextField1 para guardar la ruta de la imagen
        this.jTextField1.setVisible(false);

        //JTextField2 para guardar el nombre de la imagen
        this.jTextField2.setVisible(false);
        fecha = new Date();
        año = fecha.getYear() - 18;
        mes = fecha.getMonth();
        dia = fecha.getDay();
        jdFechaNacimiento.setMaxSelectableDate(new Date(año, mes, dia));
        jdFechaContrato.setMaxSelectableDate(new Date());
        jdFechaFinal.setMaxSelectableDate(new Date());
        jdFechaTitulo.setMaxSelectableDate(new Date());
        this.setVisible(true);
        setLocationRelativeTo(null);
        setResizable(false);
        setTitle("Gestionar Personal");
        setIconImage(new ImageIcon(getClass().getResource("/Imagenes/1_Icono_Form.JPG")).getImage());
        icoMensajeInfor = new ImageIcon("C:\\OriginalPorcicolaWilbur\\src\\Imagenes\\IconoInformacion.jpg");
        icoMensajePre = new ImageIcon("C:\\OriginalPorcicolaWilbur\\src\\Imagenes\\IconoPregunta.jpg");
        icoCalendario = new ImageIcon("C:\\OriginalPorcicolaWilbur\\src\\Imagenes\\iconoCalendario.jpg");

        rutaimagen = "";
        deparMuni.cargarDepartamentos(jCbxDepartamento);
        this.cargarComboBox();
        persona = new DatosPersonal();
        buscarPersonal = new DatosPersonal();
        this.DesactivarCampos();
        nombreVentana = "Gestionar Personal - G.A.P.";

        grupoEstado = new ButtonGroup();
        grupoEstado.add(JrbnActivo);
        grupoEstado.add(JrbnInactivo);

        grupoObtenido = new ButtonGroup();
        grupoObtenido.add(JrbnNo);
        grupoObtenido.add(JrbnSi);

        jdFechaContrato.setIcon(icoCalendario);
        jdFechaFinal.setIcon(icoCalendario);
        jdFechaNacimiento.setIcon(icoCalendario);
        jdFechaTitulo.setIcon(icoCalendario);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        JBNuevo = new javax.swing.JButton();
        JBGuardarU = new javax.swing.JButton();
        JBConsultaru = new javax.swing.JButton();
        JBModificarU = new javax.swing.JButton();
        JBEliminarU = new javax.swing.JButton();
        JBListar = new javax.swing.JButton();
        JBLimpiarU = new javax.swing.JButton();
        JBVolver = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jtCargo = new javax.swing.JTextField();
        jdFechaContrato = new com.toedter.calendar.JDateChooser();
        jcmbTipoContrato = new javax.swing.JComboBox();
        jbContrato = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jCprofesion = new javax.swing.JComboBox();
        jdFechaTitulo = new com.toedter.calendar.JDateChooser();
        jbProfesion = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jtEstudios = new javax.swing.JTextField();
        JrbnNo = new javax.swing.JRadioButton();
        JrbnSi = new javax.swing.JRadioButton();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jdFechaFinal = new com.toedter.calendar.JDateChooser();
        jPanel2 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        JTDireccion = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        JTMovil = new javax.swing.JTextField();
        JTelefono = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        JTCorreo = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        ComboDoc = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        JTDocumento = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        JTNombre = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jdFechaNacimiento = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        jCbxDepartamento = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jCbxCiudad = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jCtiposangre = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        jCtiporh = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        JrbnActivo = new javax.swing.JRadioButton();
        JrbnInactivo = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jBCargarImagen = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 5)); // NOI18N
        jTextField1.setFocusable(false);

        jTextField2.setFont(new java.awt.Font("Tahoma", 0, 5)); // NOI18N

        JBNuevo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        JBNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/1_Crear.png"))); // NOI18N
        JBNuevo.setToolTipText("CREAR");
        JBNuevo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        JBNuevo.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        JBNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBNuevoActionPerformed(evt);
            }
        });

        JBGuardarU.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        JBGuardarU.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/1_Guardar.png"))); // NOI18N
        JBGuardarU.setToolTipText("GUARDAR");
        JBGuardarU.setEnabled(false);
        JBGuardarU.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        JBGuardarU.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        JBGuardarU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBGuardarUActionPerformed(evt);
            }
        });

        JBConsultaru.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        JBConsultaru.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/1_Buscar.png"))); // NOI18N
        JBConsultaru.setToolTipText("CONSULTAR");
        JBConsultaru.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        JBConsultaru.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        JBConsultaru.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBConsultaruActionPerformed(evt);
            }
        });

        JBModificarU.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        JBModificarU.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/1_Editar.png"))); // NOI18N
        JBModificarU.setToolTipText("MODIFICAR");
        JBModificarU.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        JBModificarU.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        JBModificarU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBModificarUActionPerformed(evt);
            }
        });

        JBEliminarU.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        JBEliminarU.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/1_Eliminar.png"))); // NOI18N
        JBEliminarU.setToolTipText("ELIMINAR");
        JBEliminarU.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        JBEliminarU.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        JBEliminarU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBEliminarUActionPerformed(evt);
            }
        });

        JBListar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        JBListar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/List.png"))); // NOI18N
        JBListar.setToolTipText("LISTAR");
        JBListar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        JBListar.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        JBListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBListarActionPerformed(evt);
            }
        });

        JBLimpiarU.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        JBLimpiarU.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/1_Clear_Limpiar.png"))); // NOI18N
        JBLimpiarU.setToolTipText("LIMPIAR");
        JBLimpiarU.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        JBLimpiarU.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        JBLimpiarU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBLimpiarUActionPerformed(evt);
            }
        });

        JBVolver.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        JBVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/1_Atras.png"))); // NOI18N
        JBVolver.setToolTipText("SALIR");
        JBVolver.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        JBVolver.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        JBVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBVolverActionPerformed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), "Datos Laborales", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        jLabel21.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel21.setText("Cargo:");

        jLabel22.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel22.setText("Fecha de Contratación:");

        jLabel23.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel23.setText("Tipo de Contrato:");

        jtCargo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jtCargo.setEnabled(false);
        jtCargo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtCargoFocusLost(evt);
            }
        });
        jtCargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtCargoActionPerformed(evt);
            }
        });

        jdFechaContrato.setEnabled(false);

        jcmbTipoContrato.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jcmbTipoContrato.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "..." }));
        jcmbTipoContrato.setEnabled(false);
        jcmbTipoContrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcmbTipoContratoActionPerformed(evt);
            }
        });

        jbContrato.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/1_Crear.png"))); // NOI18N
        jbContrato.setEnabled(false);
        jbContrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbContratoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jtCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jcmbTipoContrato, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbContrato)
                        .addGap(42, 42, 42)
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jdFechaContrato, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jdFechaContrato, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jcmbTipoContrato, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jbContrato, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), "Formación Académica", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N
        jPanel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText("Profesión:");

        jLabel12.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel12.setText("Fecha Obtención Título:");

        jCprofesion.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCprofesion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "..." }));
        jCprofesion.setEnabled(false);
        jCprofesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCprofesionActionPerformed(evt);
            }
        });

        jdFechaTitulo.setEnabled(false);
        jdFechaTitulo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jbProfesion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/1_Crear.png"))); // NOI18N
        jbProfesion.setEnabled(false);
        jbProfesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbProfesionActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), "Otros Estudios:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        jLabel18.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel18.setText("Título Otros Estudios:");

        jtEstudios.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jtEstudios.setEnabled(false);
        jtEstudios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtEstudiosActionPerformed(evt);
            }
        });

        JrbnNo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        JrbnNo.setText("No");
        JrbnNo.setEnabled(false);
        JrbnNo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        JrbnNo.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        JrbnNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JrbnNoActionPerformed(evt);
            }
        });

        JrbnSi.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        JrbnSi.setText("Si");
        JrbnSi.setEnabled(false);
        JrbnSi.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        JrbnSi.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        JrbnSi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JrbnSiActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel19.setText("Obtenido:");

        jLabel20.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel20.setText("Fecha de Finalización:");

        jdFechaFinal.setEnabled(false);
        jdFechaFinal.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel18)
                .addGap(4, 4, 4)
                .addComponent(jtEstudios, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(jLabel19)
                .addGap(6, 6, 6)
                .addComponent(JrbnSi)
                .addGap(2, 2, 2)
                .addComponent(JrbnNo))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(384, 384, 384)
                .addComponent(jLabel20)
                .addGap(8, 8, 8)
                .addComponent(jdFechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtEstudios, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JrbnSi)
                            .addComponent(JrbnNo))))
                .addGap(8, 8, 8)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jdFechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jCprofesion, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jbProfesion)
                        .addGap(59, 59, 59)
                        .addComponent(jLabel12)
                        .addGap(4, 4, 4)
                        .addComponent(jdFechaTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCprofesion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbProfesion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jdFechaTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), "Domicilio", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N
        jPanel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel13.setText("*Dirección:");

        JTDireccion.setEnabled(false);
        JTDireccion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                JTDireccionFocusLost(evt);
            }
        });
        JTDireccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTDireccionActionPerformed(evt);
            }
        });
        JTDireccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                JTDireccionKeyTyped(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel14.setText("*Teléfono:");

        JTMovil.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        JTMovil.setEnabled(false);
        JTMovil.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                JTMovilFocusLost(evt);
            }
        });
        JTMovil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTMovilActionPerformed(evt);
            }
        });
        JTMovil.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                JTMovilKeyTyped(evt);
            }
        });

        JTelefono.setEnabled(false);
        JTelefono.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                JTelefonoFocusLost(evt);
            }
        });
        JTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTelefonoActionPerformed(evt);
            }
        });
        JTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                JTelefonoKeyTyped(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel15.setText("*Teléfono Móvil:");

        JTCorreo.setEnabled(false);
        JTCorreo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                JTCorreoFocusLost(evt);
            }
        });
        JTCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTCorreoActionPerformed(evt);
            }
        });
        JTCorreo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                JTCorreoKeyTyped(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel17.setText("*Correo Electrónico:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(JTDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(JTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(99, 99, 99)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(JTMovil, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(4, 4, 4)
                        .addComponent(JTCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(JTDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(JTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JTMovil, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(JTCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), "Datos Personales", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setText("*Tipo Documento:");

        ComboDoc.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        ComboDoc.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "..." }));
        ComboDoc.setEnabled(false);
        ComboDoc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboDocItemStateChanged(evt);
            }
        });
        ComboDoc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                ComboDocFocusLost(evt);
            }
        });
        ComboDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboDocActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setText("*Número Documento:");

        JTDocumento.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        JTDocumento.setEnabled(false);
        JTDocumento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                JTDocumentoFocusLost(evt);
            }
        });
        JTDocumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTDocumentoActionPerformed(evt);
            }
        });
        JTDocumento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                JTDocumentoKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel5.setText("*Nombres y Apellidos:");

        JTNombre.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        JTNombre.setEnabled(false);
        JTNombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                JTNombreFocusLost(evt);
            }
        });
        JTNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTNombreActionPerformed(evt);
            }
        });
        JTNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                JTNombreKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel6.setText("Fecha de Nacimiento:");

        jdFechaNacimiento.setEnabled(false);
        jdFechaNacimiento.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel8.setText("Departamento:");

        jCbxDepartamento.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCbxDepartamento.setEnabled(false);
        jCbxDepartamento.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCbxDepartamentoItemStateChanged(evt);
            }
        });
        jCbxDepartamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCbxDepartamentoActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel9.setText("Ciudad:");

        jCbxCiudad.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCbxCiudad.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "..." }));
        jCbxCiudad.setEnabled(false);
        jCbxCiudad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCbxCiudadActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel10.setText("Tipo Sangre:");

        jCtiposangre.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCtiposangre.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "..." }));
        jCtiposangre.setEnabled(false);
        jCtiposangre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCtiposangreActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel11.setText("Tipo RH:");

        jCtiporh.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCtiporh.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "...", "+ ", "-" }));
        jCtiporh.setEnabled(false);

        jLabel16.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel16.setText("*Estado:");

        JrbnActivo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        JrbnActivo.setText("Activo");
        JrbnActivo.setEnabled(false);
        JrbnActivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JrbnActivoActionPerformed(evt);
            }
        });

        JrbnInactivo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        JrbnInactivo.setText("Inactivo");
        JrbnInactivo.setEnabled(false);
        JrbnInactivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JrbnInactivoActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jBCargarImagen.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jBCargarImagen.setText("Cargar Imagen");
        jBCargarImagen.setEnabled(false);
        jBCargarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCargarImagenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(ComboDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)
                                .addComponent(jLabel4)
                                .addGap(0, 0, 0)
                                .addComponent(JTDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(JTNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jdFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jCbxDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(jCbxCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jCtiposangre, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13)
                                .addComponent(jLabel11)
                                .addGap(2, 2, 2)
                                .addComponent(jCtiporh, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(4, 4, 4)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(JrbnActivo)
                        .addGap(3, 3, 3)
                        .addComponent(JrbnInactivo)
                        .addGap(273, 273, 273)
                        .addComponent(jBCargarImagen)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ComboDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JTDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addComponent(JTNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jdFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCbxDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCbxCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCtiposangre, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCtiporh, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JrbnActivo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JrbnInactivo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBCargarImagen)))
        );

        jLabel24.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 0, 0));
        jLabel24.setText("(*) Campos Obligatorios");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(296, 296, 296)
                        .addComponent(jLabel24)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)
                                .addComponent(JBNuevo)
                                .addGap(18, 18, 18)
                                .addComponent(JBGuardarU)
                                .addGap(18, 18, 18)
                                .addComponent(JBConsultaru)
                                .addGap(18, 18, 18)
                                .addComponent(JBModificarU)
                                .addGap(18, 18, 18)
                                .addComponent(JBEliminarU)
                                .addGap(18, 18, 18)
                                .addComponent(JBListar)
                                .addGap(18, 18, 18)
                                .addComponent(JBLimpiarU)
                                .addGap(26, 26, 26)
                                .addComponent(JBVolver)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap())))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {JBConsultaru, JBEliminarU, JBGuardarU, JBLimpiarU, JBListar, JBModificarU, JBNuevo, JBVolver});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel24)
                .addGap(6, 6, 6)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JBVolver, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JBLimpiarU, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JBListar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JBModificarU, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JBConsultaru, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JBGuardarU, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JBNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JBEliminarU, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {JBConsultaru, JBEliminarU, JBGuardarU, JBLimpiarU, JBListar, JBModificarU, JBNuevo, JBVolver});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JBListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBListarActionPerformed
        new ReporteUsu(listaPersonal.getPrimero());

        // TODO add your handling code here:
    }//GEN-LAST:event_JBListarActionPerformed

    private void jBCargarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCargarImagenActionPerformed
        //Crear un objeto JFileChooser
        JFileChooser dlg = new JFileChooser();
        //Del objeto creado llamamos el metodo setFileFilter
        dlg.setFileFilter(filter);
        //Abrir la ventana de dialogo para escojer las imagenes
        int option = dlg.showOpenDialog(this);
        //Si hacemos clic en el boton abrir
        if (option == JFileChooser.APPROVE_OPTION) {
            //Obtener el nombre del archivo seleccionado
            String fil = dlg.getSelectedFile().getPath();
            //Obtener la direccion donde se guarda la imagen
            String file = dlg.getSelectedFile().toString();
            jLabel1.setIcon(new ImageIcon(fil));
            //Modificar la imagen
            ImageIcon icon = new ImageIcon(fil);
            //Extraer la imagen del icono
            Image img = icon.getImage();
            //Cambiar tamaño a la imagen
            Image newimg = img.getScaledInstance(153, 160, java.awt.Image.SCALE_SMOOTH);
            //Se genera el ImageIcon con la nueva imagen
            ImageIcon newIcon = new ImageIcon(newimg);
            jLabel1.setIcon(newIcon);
            //jLimagen.setSize(153,160);
            //pone la ruta de la imagen en el textbox 1
            jTextField1.setText(file);
            //pone el nombre de la imagen en el textbox 2
            jTextField2.setText(fil);
            rutaimagen = "";
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jBCargarImagenActionPerformed

    private void JrbnInactivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JrbnInactivoActionPerformed

        if (JrbnInactivo.isSelected()) {

            estado = "Inactivo";
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_JrbnInactivoActionPerformed

    private void JrbnActivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JrbnActivoActionPerformed

        if (JrbnActivo.isSelected()) {

            estado = "Activo";
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_JrbnActivoActionPerformed

    private void jCtiposangreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCtiposangreActionPerformed
        int index;
        int sw = 1;

        index = jCtiposangre.getSelectedIndex();
        // this.cargarComboBoxCiudad(index, sw);
    }//GEN-LAST:event_jCtiposangreActionPerformed

    private void jCbxCiudadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCbxCiudadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCbxCiudadActionPerformed

    private void jCbxDepartamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCbxDepartamentoActionPerformed
        int index;
        int sw = 0;

        index = jCbxDepartamento.getSelectedIndex();
        deparMuni.cargarMunicipios(index, jCbxCiudad);
        jCbxCiudad.setEnabled(true);
    }//GEN-LAST:event_jCbxDepartamentoActionPerformed

    private void jCbxDepartamentoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCbxDepartamentoItemStateChanged

        if (evt.getStateChange() == ItemEvent.SELECTED) {

            if (ComboDoc.getSelectedIndex() == 0) {

                jCbxCiudad.removeAllItems();
                jCbxCiudad.setEnabled(false);
                jCbxDepartamento.requestFocusInWindow();
            } else {

                int index;
                int sw = 0;

                index = jCbxDepartamento.getSelectedIndex();
                deparMuni.cargarMunicipios(index, jCbxCiudad);
                jCbxCiudad.setEnabled(true);
                jCbxDepartamento.transferFocus();
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jCbxDepartamentoItemStateChanged

    private void JTNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTNombreKeyTyped
        
    }//GEN-LAST:event_JTNombreKeyTyped

    private void JTNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTNombreActionPerformed
        
    }//GEN-LAST:event_JTNombreActionPerformed

    private void JTNombreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_JTNombreFocusLost

        Va.validarObligatorios(JTNombre, nombreVentana);
        // TODO add your handling code here:
    }//GEN-LAST:event_JTNombreFocusLost

    private void JTDocumentoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTDocumentoKeyTyped
        
    }//GEN-LAST:event_JTDocumentoKeyTyped

    private void JTDocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTDocumentoActionPerformed
        
    }//GEN-LAST:event_JTDocumentoActionPerformed

    private void JTDocumentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_JTDocumentoFocusLost

        if (JTDocumento.getText().toString().equals("")) {

            JOptionPane.showMessageDialog(null, "Campo obligatorio", "Gestionar Personal - G.A.P", JOptionPane.YES_OPTION,
                icoMensajeInfor);
            JTDocumento.requestFocusInWindow();
        } else {

            if (listaPersonal.existe(JTDocumento.getText())) {

                JOptionPane.showMessageDialog(null, "Este número de documento ya esta registrado", "Gestionar Personal - G.A.P", JOptionPane.YES_OPTION,
                    icoMensajeInfor);
                JTDocumento.setText("");
                JTDocumento.requestFocusInWindow();
            } else {

                JTDocumento.transferFocus();
            }

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_JTDocumentoFocusLost

    private void ComboDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboDocActionPerformed
         
    }//GEN-LAST:event_ComboDocActionPerformed

    private void ComboDocFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ComboDocFocusLost

        if (ComboDoc.getSelectedIndex() == 0) {

                JOptionPane.showMessageDialog(null, "Debe seleccionar un tipo de documento", "Registrar Personal - G.A.P", JOptionPane.YES_OPTION,
                    icoMensajeInfor);
                ComboDoc.requestFocusInWindow();
            } else {

                ComboDoc.transferFocus();
            }
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboDocFocusLost

    private void ComboDocItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboDocItemStateChanged

     /*   if (evt.getStateChange() == ItemEvent.SELECTED) {

            if (ComboDoc.getSelectedIndex() == 0) {

                JOptionPane.showMessageDialog(null, "Debe seleccionar un tipo de documento", "Registrar Personal - G.A.P", JOptionPane.YES_OPTION,
                    icoMensajeInfor);
                ComboDoc.requestFocusInWindow();
            } else {

                ComboDoc.transferFocus();
            }
        }*/

        // TODO add your handling code here:
    }//GEN-LAST:event_ComboDocItemStateChanged

    private void JTCorreoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTCorreoKeyTyped
        
    }//GEN-LAST:event_JTCorreoKeyTyped

    private void JTCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTCorreoActionPerformed
         
    }//GEN-LAST:event_JTCorreoActionPerformed

    private void JTCorreoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_JTCorreoFocusLost

        if (JTDocumento.getText().toString().equals("")) {

            JOptionPane.showMessageDialog(null, "Campo obligatorio", "Gestionar Personal - G.A.P", JOptionPane.YES_OPTION,
                icoMensajeInfor);
            JTDocumento.requestFocusInWindow();
        } else {

            if (!Va.validarEmail(JTCorreo.getText())) {  //Validamos si el correo electronico si corresponde al formato

                JOptionPane.showMessageDialog(null, "Este formato no es el de un email", "Gestionar Personal - S.G.P",
                    JOptionPane.OK_OPTION, icoMensajeInfor);
                JTCorreo.requestFocus();
            } else {
                if (listaPersonal.existe(JTCorreo.getText())) {

                    JOptionPane.showMessageDialog(null, "Este correo ya esta registrado", "Gestionar Personal - S.G.P",
                        JOptionPane.OK_OPTION, icoMensajeInfor);
                    JTCorreo.requestFocusInWindow();
                } else {
                    JTCorreo.transferFocus();
                }
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_JTCorreoFocusLost

    private void JTelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTelefonoKeyTyped
         
    }//GEN-LAST:event_JTelefonoKeyTyped

    private void JTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTelefonoActionPerformed
         
    }//GEN-LAST:event_JTelefonoActionPerformed

    private void JTelefonoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_JTelefonoFocusLost

        Va.validarObligatorios(JTelefono, nombreVentana);
        // TODO add your handling code here:
    }//GEN-LAST:event_JTelefonoFocusLost

    private void JTMovilKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTMovilKeyTyped
         
    }//GEN-LAST:event_JTMovilKeyTyped

    private void JTMovilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTMovilActionPerformed
         
    }//GEN-LAST:event_JTMovilActionPerformed

    private void JTMovilFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_JTMovilFocusLost

        Va.validarObligatorios(JTMovil, nombreVentana);
        // TODO add your handling code here:
    }//GEN-LAST:event_JTMovilFocusLost

    private void JTDireccionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTDireccionKeyTyped
         
    }//GEN-LAST:event_JTDireccionKeyTyped

    private void JTDireccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTDireccionActionPerformed
         
    }//GEN-LAST:event_JTDireccionActionPerformed

    private void JTDireccionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_JTDireccionFocusLost

        Va.validarObligatorios(JTDireccion, nombreVentana);
        // TODO add your handling code here:
    }//GEN-LAST:event_JTDireccionFocusLost

    private void JrbnSiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JrbnSiActionPerformed

        if (JrbnSi.isSelected()) {

            obtenido = "Si";
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_JrbnSiActionPerformed

    private void JrbnNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JrbnNoActionPerformed

        if (JrbnNo.isSelected()) {

            obtenido = "No";
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_JrbnNoActionPerformed

    private void jtEstudiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtEstudiosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtEstudiosActionPerformed

    private void jbProfesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbProfesionActionPerformed

        String[] profesion = new String[20];
        String R;

        R = JOptionPane.showInputDialog("Ingrese la profesión:");

        for (int i = 0; i < profesion.length; i++) {
            profesion[i] = (String) jCprofesion.getItemAt(i);
        }

        jCprofesion.removeAllItems();

        for (int i = 0; i < profesion.length; i++) {

            if (profesion[i] == "" || profesion[i] == null) {
                profesion[i] = R;

                Arrays.sort(profesion, 0, i + 1);

                for (int j = 0; j <= i; j++) {
                    jCprofesion.addItem(profesion[j]);
                }
                break;
            }

        }
    }//GEN-LAST:event_jbProfesionActionPerformed

    private void jCprofesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCprofesionActionPerformed

    }//GEN-LAST:event_jCprofesionActionPerformed

    private void jbContratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbContratoActionPerformed
        String[] contratos = new String[20];
        String R;

        R = JOptionPane.showInputDialog("Ingrese el tipo de contrato: ");

        for (int i = 0; i < contratos.length; i++) {
            contratos[i] = (String) jcmbTipoContrato.getItemAt(i);
        }

        jcmbTipoContrato.removeAllItems();

        for (int i = 0; i < contratos.length; i++) {

            if (contratos[i] == "" || contratos[i] == null) {
                contratos[i] = R;

                Arrays.sort(contratos, 0, i + 1);

                for (int j = 0; j <= i; j++) {
                    jcmbTipoContrato.addItem(contratos[j]);
                }
                break;
            }
        }
    }//GEN-LAST:event_jbContratoActionPerformed

    private void jcmbTipoContratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcmbTipoContratoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcmbTipoContratoActionPerformed

    private void jtCargoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtCargoActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_jtCargoActionPerformed

    private void jtCargoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtCargoFocusLost

        if (JTDocumento.getText().toString().equals("")) {

            JOptionPane.showMessageDialog(null, "Campo obligatorio", "Gestionar Personal - G.A.P", JOptionPane.YES_OPTION,
                icoMensajeInfor);
            JTDocumento.requestFocusInWindow();
        } else {

            this.habilitarBotonGuardar();
            this.DesactivarCampos();
            JBGuardarU.requestFocusInWindow();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jtCargoFocusLost

    private void JBNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBNuevoActionPerformed
        this.ActivarCampos();
        swModifi = 0;
        this.LimpiarCamposU();
        this.desactivarBotones();
    }//GEN-LAST:event_JBNuevoActionPerformed

    private void JBGuardarUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBGuardarUActionPerformed

        persona = this.GuardarCamposU();
        String s = Va.Validacion(persona);
        if (this.validacionObligatorios().equals("")) {
            if (swModifi == 0) {
                if (!listaPersonal.existe(persona.getDocumento())) {
                    DatosPersonal u2 = persona;

                    if (listaPersonal.guardarUsuario(u2)) {
                        JOptionPane.showMessageDialog(this, "Se guardó Correctamente", "Registro Personal - G.A.P", JOptionPane.YES_NO_OPTION,
                            icoMensajePre);
                        this.LimpiarCamposU();
                        this.activarBotones();
                        JBGuardarU.setEnabled(false);

                    } else {
                        JOptionPane.showMessageDialog(this, "No se guardó correctamente", "Registro Personal - G.A.P", JOptionPane.YES_NO_OPTION,
                            icoMensajePre);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Este usuario ya existe", "Registro Personal - G.A.P", JOptionPane.YES_NO_OPTION,
                        icoMensajePre);
                }
            } else {
                int opc;
                opc = JOptionPane.showConfirmDialog(null, "Esta seguro que desea modificar este registro",
                    "Datos Animal - G.A.P", JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE, icoMensajePre);
                if (opc == 0) {
                    if (listaPersonal.modificarUsuario(persona)) {

                        JOptionPane.showMessageDialog(null, "El registro se modifico correctamente", "Registro Personal - G.A.P",
                            JOptionPane.OK_OPTION, icoMensajeInfor);
                        this.LimpiarCamposU();
                        this.DesactivarCampos();
                        this.activarBotones();
                        JBGuardarU.setEnabled(false);
                        JBNuevo.requestFocusInWindow();
                    } else {

                        JOptionPane.showMessageDialog(null, "El registro no fue modificado", "Registro Personal - G.A.P",
                            JOptionPane.OK_OPTION, icoMensajeInfor);
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "Se cancelo la modificación", "Registro Personal - G.A.P",
                            JOptionPane.OK_OPTION, icoMensajeInfor);
                    JBGuardarU.setEnabled(false);
                    this.LimpiarCamposU();
                    this.activarBotones();
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "¡Complete los campos obligatorios(*)!", "Registro Personal - G.A.P", JOptionPane.YES_NO_OPTION,
                icoMensajePre);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_JBGuardarUActionPerformed

    private void JBModificarUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBModificarUActionPerformed

        swModifi = 1;
        this.LlenarDatosU();
        this.ActivarCampos();
        this.desactivarBotones();

        // TODO add your handling code here:
    }//GEN-LAST:event_JBModificarUActionPerformed

    private void JBConsultaruActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBConsultaruActionPerformed

        swModifi = 0;
        this.LlenarDatosU();
        this.DesactivarCampos();
        this.desactivarBotones();

        // TODO add your handling code here:
    }//GEN-LAST:event_JBConsultaruActionPerformed

    private void JBEliminarUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBEliminarUActionPerformed

        String s = JOptionPane.showInputDialog(this, "Ingrese el documento del usuario a eliminar");

        if (listaPersonal.existe(s)) {
            JOptionPane.showMessageDialog(this, "Esta seguro que desea eliminar este usuario", "Registro Personal - G.A.P", JOptionPane.YES_NO_OPTION,
                icoMensajePre);
            if (listaPersonal.eliminarUsuario(s)) {
                JOptionPane.showMessageDialog(this, "Se ha eliminado correctamente", "Registro Personal - G.A.P", JOptionPane.YES_NO_OPTION,
                    icoMensajePre);
                this.LimpiarCamposU();
            } else {
                JOptionPane.showMessageDialog(this, "No se pudo eliminar el usuario", "Registro Personal - G.A.P", JOptionPane.YES_NO_OPTION,
                    icoMensajePre);
            }
        } else {
            JOptionPane.showMessageDialog(this, "El usuario no existe", "Registro Personal - G.A.P", JOptionPane.YES_NO_OPTION,
                icoMensajePre);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_JBEliminarUActionPerformed

    private void JBLimpiarUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBLimpiarUActionPerformed
        this.LimpiarCamposU();
        this.DesactivarCampos();
        this.activarBotones();
        // TODO add your handling code here:
    }//GEN-LAST:event_JBLimpiarUActionPerformed

    private void JBVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBVolverActionPerformed
        int opc;
        opc = JOptionPane.showConfirmDialog(null, "¿Está seguro que desea salir de Registro Personal?",
            "Salir.  Gestión Administrativa Porcícola - G.A.P.", JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE, icoMensajePre);
        if (opc == 0) {
            this.dispose();

        }

        // TODO add your handling code here:
    }//GEN-LAST:event_JBVolverActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroPersonal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroPersonal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroPersonal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroPersonal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistroPersonal().setVisible(true);

            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox ComboDoc;
    private javax.swing.JButton JBConsultaru;
    private javax.swing.JButton JBEliminarU;
    private javax.swing.JButton JBGuardarU;
    private javax.swing.JButton JBLimpiarU;
    private javax.swing.JButton JBListar;
    private javax.swing.JButton JBModificarU;
    private javax.swing.JButton JBNuevo;
    private javax.swing.JButton JBVolver;
    private javax.swing.JTextField JTCorreo;
    private javax.swing.JTextField JTDireccion;
    private javax.swing.JTextField JTDocumento;
    private javax.swing.JTextField JTMovil;
    private javax.swing.JTextField JTNombre;
    private javax.swing.JTextField JTelefono;
    private javax.swing.JRadioButton JrbnActivo;
    private javax.swing.JRadioButton JrbnInactivo;
    private javax.swing.JRadioButton JrbnNo;
    private javax.swing.JRadioButton JrbnSi;
    private javax.swing.JButton jBCargarImagen;
    private javax.swing.JComboBox jCbxCiudad;
    private javax.swing.JComboBox jCbxDepartamento;
    private javax.swing.JComboBox jCprofesion;
    private javax.swing.JComboBox jCtiporh;
    private javax.swing.JComboBox jCtiposangre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JButton jbContrato;
    private javax.swing.JButton jbProfesion;
    private javax.swing.JComboBox jcmbTipoContrato;
    private com.toedter.calendar.JDateChooser jdFechaContrato;
    private com.toedter.calendar.JDateChooser jdFechaFinal;
    private com.toedter.calendar.JDateChooser jdFechaNacimiento;
    private com.toedter.calendar.JDateChooser jdFechaTitulo;
    private javax.swing.JTextField jtCargo;
    private javax.swing.JTextField jtEstudios;
    // End of variables declaration//GEN-END:variables

    public void DesactivarCampos() {
        JTDocumento.setEnabled(false);
        JTDireccion.setEnabled(false);
        JTelefono.setEnabled(false);
        JTMovil.setEnabled(false);
        JTCorreo.setEnabled(false);
        JTNombre.setEnabled(false);
        jtCargo.setEnabled(false);
        jtEstudios.setEnabled(false);
        jdFechaContrato.setEnabled(false);
        jdFechaFinal.setEnabled(false);
        jdFechaNacimiento.setEnabled(false);
        jdFechaTitulo.setEnabled(false);
        ComboDoc.setEnabled(false);
        jCbxCiudad.setEnabled(false);
        jCbxDepartamento.setEnabled(false);
        jCprofesion.setEnabled(false);
        jCtiporh.setEnabled(false);
        jCtiposangre.setEnabled(false);
        jcmbTipoContrato.setEnabled(false); 
        jdFechaNacimiento.setEnabled(false);
        JrbnActivo.setEnabled(false);
        JrbnInactivo.setEnabled(false);
        jBCargarImagen.setEnabled(false);
        jbProfesion.setEnabled(false);
        jdFechaTitulo.setEnabled(false);
        JrbnSi.setEnabled(false);
        JrbnNo.setEnabled(false);
        jdFechaFinal.setEnabled(false);
        jdFechaContrato.setEnabled(false);
        jbContrato.setEnabled(false);
    }

    public void ActivarCampos() {
        JTDocumento.setEnabled(true);
        JTDireccion.setEnabled(true);
        JTelefono.setEnabled(true);
        JTMovil.setEnabled(true);
        JTCorreo.setEnabled(true);
        JTNombre.setEnabled(true);
        jtCargo.setEnabled(true);
        jtEstudios.setEnabled(true);
        jdFechaContrato.setEnabled(true);
        jdFechaFinal.setEnabled(true);
        jdFechaNacimiento.setEnabled(true);
        jdFechaTitulo.setEnabled(true);
        ComboDoc.setEnabled(true);
        jCbxDepartamento.setEnabled(true);
        jCprofesion.setEnabled(true);
        jCtiposangre.setEnabled(true);
        jCtiporh.setEnabled(true);
        jcmbTipoContrato.setEnabled(true); 
        jdFechaNacimiento.setEnabled(true);
        JrbnActivo.setEnabled(true);
        JrbnInactivo.setEnabled(true);
        jBCargarImagen.setEnabled(true);
        jbProfesion.setEnabled(true);
        jdFechaTitulo.setEnabled(true);
        JrbnSi.setEnabled(true);
        JrbnNo.setEnabled(true);
        jdFechaFinal.setEnabled(true);
        jdFechaContrato.setEnabled(true);
        jbContrato.setEnabled(true);

        //Activar la opción Activo
        JrbnActivo.setSelected(true);
        JrbnInactivo.setSelected(false);

    }

    public void desactivarBotones() {

        JBNuevo.setEnabled(false);
        JBModificarU.setEnabled(false);
        JBConsultaru.setEnabled(false);
        JBEliminarU.setEnabled(false);
        JBListar.setEnabled(false);
    }

    public void activarBotones() {

        JBNuevo.setEnabled(true);
        JBModificarU.setEnabled(true);
        JBConsultaru.setEnabled(true);
        JBEliminarU.setEnabled(true);
        JBListar.setEnabled(true);
    }

    public void LimpiarCamposU() {
        JTDocumento.setText("");
        JTDireccion.setText("");
        JTelefono.setText("");
        JTMovil.setText("");
        JTCorreo.setText("");
        JTNombre.setText("");
        jtCargo.setText("");
        jtEstudios.setText("");
        jdFechaContrato.setDate(null);
        jdFechaFinal.setDate(null);
        jdFechaNacimiento.setDate(null);
        jdFechaTitulo.setDate(null);
        ComboDoc.setSelectedIndex(0);
        //jCbxCiudad.setSelectedItem(null);
        jCbxDepartamento.setSelectedIndex(0);
        jCprofesion.setSelectedIndex(0);
        jCtiporh.setSelectedIndex(0);
        jCtiposangre.setSelectedIndex(0);
        jcmbTipoContrato.setSelectedIndex(0);
        //Extraer la imagen del icono
        jLabel1.setIcon(null);
        grupoEstado.clearSelection();
        grupoObtenido.clearSelection();

    }

    public DatosPersonal GuardarCamposU() {
        DatosPersonal u2 = new DatosPersonal();
        u2.setDocumento(JTDocumento.getText());
        u2.setDireccion(JTDireccion.getText());
        u2.setTelefono(JTelefono.getText());
        u2.setMovil(JTMovil.getText());
        u2.setCorreo(JTCorreo.getText());
        u2.setNombre(JTNombre.getText());
        u2.setEstado(estado);
        u2.setObtenidoEstudio(obtenido);
        u2.setCargo(jtCargo.getText());
        u2.setTipoContrato((String) jcmbTipoContrato.getSelectedItem());
        u2.setOtroEst(jtEstudios.getText());
        u2.setFechaContrato(jdFechaContrato.getDate());
        u2.setFechaOtroEst(jdFechaFinal.getDate());
        u2.setFechaNacimiento(jdFechaNacimiento.getDate());
        u2.setFechaTitulo(jdFechaTitulo.getDate());
        u2.setTipoDoc((String) ComboDoc.getSelectedItem());
        u2.setCiudad((String) jCbxCiudad.getSelectedItem());
        u2.setDepart((String) jCbxDepartamento.getSelectedItem());
        u2.setProfesion((String) jCprofesion.getSelectedItem());
        u2.setRh((String) jCtiporh.getSelectedItem());
        u2.setSangre((String) jCtiposangre.getSelectedItem());
        u2.setTipoContrato((String) jcmbTipoContrato.getSelectedItem());
        u2.setRutaImagen(jTextField1.getText());
        u2.setNombreimg(jTextField2.getText());
        return u2;
    }

    public void LlenarDatosU() {

        int opc = -2;
        String[] opciones = {"Número de Documento", "Nombre", "Correo"};
        if (swModifi == 1) {

            buscarPersonal = listaPersonal.cargarUsuario(JOptionPane.showInputDialog("Ingrese el número de documento del registro a modificar"));
            this.ActivarCampos();
            this.desactivarBotones();
        } else {

            opc = JOptionPane.showOptionDialog(null, "Seleccione la forma en que desea realizar la consulta",
                    "Consulta de Personal. Sistematización Granjas Porcícola - S.G.P.", JOptionPane.YES_NO_CANCEL_OPTION,
                    JOptionPane.QUESTION_MESSAGE, icoMensajePre, opciones, true);
            switch (opc) {

                case 0:
                    buscarPersonal = listaPersonal.cargarUsuario(JOptionPane.showInputDialog("Ingrese el número de documento del personal a consultar"));
                    break;
                case 1:
                    buscarPersonal = listaPersonal.cargarUsuarioNombre(JOptionPane.showInputDialog("Ingrese el nombre del personal a consultar"));
                    break;
                case 2:
                    buscarPersonal = listaPersonal.cargarUsuarioCorreo(JOptionPane.showInputDialog("Ingrese el correo del personal a consultar"));
                    break;
            }
        }
        if (opc != -1) {

            if (buscarPersonal != null) {
                JTDocumento.setText(buscarPersonal.getDocumento());
                JTDireccion.setText(buscarPersonal.getDireccion());
                JTelefono.setText(buscarPersonal.getTelefono());
                JTMovil.setText(buscarPersonal.getMovil());
                JTCorreo.setText(buscarPersonal.getCorreo());
                JTNombre.setText(buscarPersonal.getNombre());
                jtCargo.setText(buscarPersonal.getCargo());
                jtEstudios.setText(buscarPersonal.getOtroEst());
                if (buscarPersonal.getEstado().equals("Activo")) {
                    JrbnActivo.setSelected(true);
                } else {
                    JrbnInactivo.setSelected(true);
                }
                jdFechaContrato.setDate(buscarPersonal.getFechaContrato());
                jdFechaFinal.setDate(buscarPersonal.getFechaOtroEst());
                jdFechaNacimiento.setDate(buscarPersonal.getFechaNacimiento());
                jdFechaTitulo.setDate(buscarPersonal.getFechaTitulo());
                ComboDoc.setSelectedItem(buscarPersonal.getTipoDoc());
                if (buscarPersonal.getObtenidoEstudio().equals("Si")) {
                    JrbnSi.setSelected(true);
                } else {
                    JrbnNo.setSelected(true);
                }
                jCbxCiudad.setSelectedItem(buscarPersonal.getCiudad());
                jCbxDepartamento.setSelectedItem(buscarPersonal.getDepart());
                jCprofesion.setSelectedItem(buscarPersonal.getProfesion());
                jCtiporh.setSelectedItem(buscarPersonal.getRh());
                jCtiposangre.setSelectedItem(buscarPersonal.getSangre());
                jcmbTipoContrato.setSelectedItem(buscarPersonal.getTipoContrato());
                jTextField1.setText(buscarPersonal.getRutaImagen());
                jTextField2.setText(buscarPersonal.getNombreimg());

                //Obtener el nombre la imagen
                String fil = jTextField2.getText();
                //Obtener la direccion donde se guarda la imagen
                String file = jTextField1.getText();
                jLabel1.setIcon(new ImageIcon(fil));
                //Modificar la imagen
                ImageIcon icon = new ImageIcon(fil);
                //Extraer la imagen del icono
                Image img = icon.getImage();
                //Cambiar tamaño a la imagen       
                Image newimg = img.getScaledInstance(153, 160, java.awt.Image.SCALE_SMOOTH);
                //Se genera el ImageIcon con la nueva imagen
                ImageIcon newIcon = new ImageIcon(newimg);
                jLabel1.setIcon(newIcon);
            } else {

                JOptionPane.showMessageDialog(null, "El registro no existe", "Gestionar Personal - G.A.P",
                        JOptionPane.OK_OPTION, icoMensajeInfor);
                this.activarBotones();
            }
        } else {

            JOptionPane.showMessageDialog(null, "Se cancelo la consulta", "Gestionar Personal - G.A.P",
                    JOptionPane.OK_OPTION, icoMensajeInfor);
        }
        buscarPersonal = null;
    }

    private String validacionObligatorios() {
        String s = "";
        persona = this.GuardarCamposU();
        if (persona.getDocumento().equals("") || persona.getNombre().equals("") || persona.getCorreo().equals("")) {
            s = "Complete todos los campos obligatorios";
        }

        return s;
    }

    public void validarCampos() {
        JTDocumento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent e) {
                Va.validarLongitud(10, JTDocumento, e);
                Va.soloNumeros(JTDocumento, e);
            }
        });

        this.JTNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent e) {
                Va.validarLongitud(30, JTNombre, e);
                Va.soloLetras(JTNombre, e);
            }
        });
        this.JTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent e) {
                Va.validarLongitud(10, JTelefono, e);
                Va.soloNumeros(JTelefono, e);
            }
        });
        this.JTMovil.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent e) {
                Va.validarLongitud(12, JTMovil, e);
                Va.soloNumeros(JTMovil, e);
            }
        });

    }

    private void cargarComboBox() {

        ComboDoc.addItem("Cedula de Ciudadanía");
        ComboDoc.addItem("Cedula de Extranjería");
        ComboDoc.addItem("Contraseña");
        ComboDoc.addItem("Pasaporte");

        jCtiposangre.addItem("A");
        jCtiposangre.addItem("B");
        jCtiposangre.addItem("O");
        jCtiposangre.addItem("AB");

    }

    /*  private void cargarComboBoxCiudad(int newIndex, int newSw) {
     int i = newIndex - 1;
     int sw = newSw;

     if (sw == 0) {
     jCbxCiudad.removeAllItems();
     jCbxCiudad.setEnabled(true);

     if (i == -1) {
     jCbxCiudad.addItem("...");
     jCbxCiudad.setEnabled(false);
     } else {
     deparMuni.cargarMunicipios(i, jCbxCiudad);
     }
     } else {
     jCtiporh.removeAllItems();
     jCtiporh.setEnabled(true);

     if (i == -1) {
     jCtiporh.addItem("...");
     jCtiporh.setEnabled(false);
     } else {
     jCtiporh.addItem("+");
     jCtiporh.addItem("-");
     }
     }
     }*/
    private void habilitarBotonGuardar() {

        String n = JTDocumento.getText();

        if ((ComboDoc.getSelectedIndex() >= 1) && (!"".equals(JTDocumento.getText()))
                && (!"".equals(JTNombre.getText())) && (!"".equals(JTDireccion.getText()))
                && (!"".equals(JTelefono.getText())) && (!"".equals(JTMovil.getText()))
                && (!"".equals(JTCorreo.getText()))) {
            JBGuardarU.setEnabled(true);
        } else {
            JBGuardarU.setEnabled(false);
        }
    }
}
